generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Camp {
  Date_from    DateTime       @db.Date
  Date_to      DateTime       @db.Date
  Description  String?        @db.VarChar(4000)
  Name         String         @db.VarChar(50)
  Price        Int
  CampID       Int            @id @default(autoincrement()) @db.UnsignedInt
  DirectoryID  Int            @db.UnsignedInt
  Directory    Directory      @relation(fields: [DirectoryID], references: [DirectoryID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Camp_Directory")
  Menu         Menu[]
  Program      Program[]
  Registration Registration[]
  Worker       Worker[]

  @@index([DirectoryID], map: "FK_Camp_Directory")
}

model City {
  City        String    @db.VarChar(60)
  Zip_code    Int
  CityID      Int       @id @default(autoincrement()) @db.UnsignedInt
  DirectoryID Int       @db.UnsignedInt
  Directory   Directory @relation(fields: [DirectoryID], references: [DirectoryID], onDelete: NoAction, onUpdate: NoAction, map: "FK_City_Directory")

  @@index([DirectoryID], map: "FK_City_Directory")
}

model Directory {
  Street               String                 @db.VarChar(50)
  DirectoryID          Int                    @id @default(autoincrement()) @db.UnsignedInt
  Camp                 Camp[]
  City                 City[]
  Legal_representative Legal_representative[]
  User                 User[]
}

model Food {
  Allergen    String? @db.VarChar(100)
  Description String? @db.VarChar(750)
  Name        String  @db.VarChar(75)
  Type        Int     @db.TinyInt
  FoodID      Int     @id @default(autoincrement()) @db.UnsignedInt
  Menu        Menu[]
}

model Job {
  Description String?  @db.VarChar(250)
  Type        Int      @db.TinyInt
  JobID       Int      @id @default(autoincrement()) @db.UnsignedInt
  Worker      Worker[]
}

model Legal_representative {
  Birthdate              DateTime  @db.Date
  Email                  String    @db.VarChar(50)
  First_name             String    @db.VarChar(30)
  Last_name              String    @db.VarChar(30)
  Phone_number           BigInt
  Pin                    BigInt
  Legal_representativeID Int       @id @default(autoincrement()) @db.UnsignedInt
  DirectoryID            Int       @db.UnsignedInt
  Directory              Directory @relation(fields: [DirectoryID], references: [DirectoryID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Legal_representative_Directory")
  User                   User[]

  @@index([DirectoryID], map: "FK_Legal_representative_Directory")
}

model Login {
  Function_type Int      @db.TinyInt
  Login         String   @db.VarChar(30)
  Password      String   @db.VarChar(60)
  LoginID       Int      @id @default(autoincrement()) @db.UnsignedInt
  User          User[]
  Worker        Worker[]
}

model Menu {
  Time   DateTime @db.DateTime(0)
  MenuID Int      @id @default(autoincrement()) @db.UnsignedInt
  CampID Int      @db.UnsignedInt
  FoodID Int      @db.UnsignedInt
  Camp   Camp     @relation(fields: [CampID], references: [CampID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Menu_Camp")
  Food   Food     @relation(fields: [FoodID], references: [FoodID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Menu_Food")

  @@index([CampID], map: "FK_Menu_Camp")
  @@index([FoodID], map: "FK_Menu_Food")
}

model Profile {
  Modification_date DateTime @db.DateTime(0)
  Suffix            String   @db.VarChar(8)
  Type              String   @db.VarChar(50)
  Upload_date       DateTime @db.DateTime(0)
  ProfileID         Int      @id @default(autoincrement()) @db.UnsignedInt
  Worker            Worker[]
}

model Program {
  Description String?  @db.VarChar(4000)
  From        DateTime @db.DateTime(0)
  Name        String   @db.VarChar(60)
  To          DateTime @db.DateTime(0)
  ProgramID   Int      @id @default(autoincrement()) @db.UnsignedInt
  CampID      Int      @db.UnsignedInt
  Camp        Camp     @relation(fields: [CampID], references: [CampID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Program_Camp")

  @@index([CampID], map: "FK_Program_Camp")
}

model Registration {
  Date           DateTime @db.DateTime(0)
  Is_paid        Boolean
  RegistrationID Int      @id @default(autoincrement()) @db.UnsignedInt
  UserID         Int      @db.UnsignedInt
  CampID         Int      @db.UnsignedInt
  Camp           Camp     @relation(fields: [CampID], references: [CampID], onDelete: NoAction, onUpdate: NoAction, map: "FK_registration_camp")
  User           User     @relation(fields: [UserID], references: [UserID], onDelete: NoAction, onUpdate: NoAction, map: "FK_registration_user")

  @@index([CampID], map: "FK_registration_camp")
  @@index([UserID], map: "FK_registration_user")
}

model User {
  Birthdate              DateTime              @db.Date
  Email                  String                @db.VarChar(50)
  First_name             String                @db.VarChar(30)
  Last_name              String                @db.VarChar(30)
  Phone_number           BigInt
  Pin                    BigInt
  UserID                 Int                   @id @default(autoincrement()) @db.UnsignedInt
  DirectoryID            Int                   @db.UnsignedInt
  Legal_representativeID Int?                  @db.UnsignedInt
  LoginID                Int                   @db.UnsignedInt
  Registration           Registration[]
  Directory              Directory             @relation(fields: [DirectoryID], references: [DirectoryID], onDelete: NoAction, onUpdate: NoAction, map: "FK_User_Directory")
  Legal_representative   Legal_representative? @relation(fields: [Legal_representativeID], references: [Legal_representativeID], onDelete: NoAction, onUpdate: NoAction, map: "FK_User_Legal_representative")
  Login                  Login                 @relation(fields: [LoginID], references: [LoginID], onDelete: NoAction, onUpdate: NoAction, map: "FK_User_Login")

  @@index([DirectoryID], map: "FK_User_Directory")
  @@index([Legal_representativeID], map: "FK_User_Legal_representative")
  @@index([LoginID], map: "FK_User_Login")
}

model Worker {
  Email        String? @db.VarChar(50)
  First_name   String? @db.VarChar(35)
  Last_name    String? @db.VarChar(35)
  Phone_number BigInt?
  Title        String? @db.VarChar(20)
  WorkerID     Int     @id @default(autoincrement()) @db.UnsignedInt
  CampID       Int     @db.UnsignedInt
  JobID        Int     @db.UnsignedInt
  LoginID      Int?    @db.UnsignedInt
  ProfileID    Int     @db.UnsignedInt
  Camp         Camp    @relation(fields: [CampID], references: [CampID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Worker_Camp")
  Job          Job     @relation(fields: [JobID], references: [JobID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Worker_Job")
  Login        Login?  @relation(fields: [LoginID], references: [LoginID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Worker_Login")
  Profile      Profile @relation(fields: [ProfileID], references: [ProfileID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Worker_Profile")

  @@index([CampID], map: "FK_Worker_Camp")
  @@index([JobID], map: "FK_Worker_Job")
  @@index([LoginID], map: "FK_Worker_Login")
  @@index([ProfileID], map: "FK_Worker_Profile")
}
